{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Issues:\
\
1) The resume game code was done at the very end, so although it works, it's probably fragile. Not sure how implementing it affected the normal game start, although that appears unaffected. The code is hacky and patched together to make it work. Because of that, there are several compromises.\
a) The max turns which is normally uploaded from the Player 1 is now hard coded on a resume. b) Resume always starts with Player 1 c) For some reason on a resume the history is not storing the actual score, even though it's calculated correctly.\
\
2) Player 1/2 is determined by election. The code is solid, however it can fail under certain circumstances. IF one device connects and then quits before another device connects, the state will not reset and the next device will be Player 2. IF the first device first minimizes, then resignActive fires and it resets. Not normally a problem.\
\
3) If for some reason the previous game isn't removed from Firestore, this can cause the next game to not work. This shouldn't happen, however there is a 'Reset' Firestore option in Preferences. This also resets the election data.\
\
\
Code;\
\
So the game is driven by the state model. Listeners are activated on each state change which call state functions. The listeners are in an array in the main VC, mostly in chronological order.\
\
Firestore Object model:\
\
There are two collections: activeGame and elect_leader. The activeGame consists of a header document, '0' (used for the listener to determine the first move as a new document is added) and the moves numbered from 1 - x. Each document consists of the moveTime, location, and player.\
\
The elect_leader is used to determine who is Player 1 and if the game has started.\
\
Cool Things:\
\
1) Thumbnail of gameboard in the history.\
2) Extension of UILabel to clean up code some.\
3) Election and notification when other player has joined and when Player 1 has started game.\
4) Countdown timer and forfeiture of move.\
5) Preferences page with scroller.\
\
Those are the highlights, most of the rest is in the code.}